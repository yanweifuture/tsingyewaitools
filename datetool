<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Date & Calendar Info</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            text-align: center;
            max-width: 500px;
            width: 100%;
        }

        h1 {
            color: #333;
            margin-bottom: 30px;
            font-size: 2.5em;
            font-weight: 300;
        }

        .info-card {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .info-card:hover {
            transform: translateY(-5px);
        }

        .label {
            font-size: 0.9em;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 10px;
        }

        .value {
            font-size: 1.8em;
            color: #333;
            font-weight: 600;
        }

        .week-number {
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        }

        .current-date {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
        }

        .lunar-date {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
        }

        .time {
            font-size: 1.2em;
            color: #666;
            margin-top: 20px;
        }

        @media (max-width: 480px) {
            h1 {
                font-size: 2em;
            }
            
            .value {
                font-size: 1.5em;
            }
            
            .container {
                padding: 30px 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>📅 Calendar Info</h1>
        
        <div class="info-card week-number">
            <div class="label">Week of the Year</div>
            <div class="value" id="weekNumber">Loading...</div>
        </div>
        
        <div class="info-card current-date">
            <div class="label">Current Date</div>
            <div class="value" id="currentDate">Loading...</div>
        </div>
        
        <div class="info-card lunar-date">
            <div class="label">Chinese Lunar Date</div>
            <div class="value" id="lunarDate">Loading...</div>
        </div>
        
        <div class="time" id="currentTime">Loading...</div>
    </div>

    <script>
        // Function to get week number
        function getWeekNumber(date) {
            const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
            const dayNum = d.getUTCDay() || 7;
            d.setUTCDate(d.getUTCDate() + 4 - dayNum);
            const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));
            return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);
        }

        // Simple Chinese lunar calendar converter
        // Note: This is a simplified version. For production use, consider using a proper library
        class ChineseLunarCalendar {
            constructor() {
                this.lunarInfo = [
                    0x04bd8, 0x04ae0, 0x0a570, 0x054d5, 0x0d260, 0x0d950, 0x16554, 0x056a0, 0x09ad0, 0x055d2,
                    0x04ae0, 0x0a5b6, 0x0a4d0, 0x0d250, 0x1d255, 0x0b540, 0x0d6a0, 0x0ada2, 0x095b0, 0x14977,
                    0x04970, 0x0a4b0, 0x0b4b5, 0x06a50, 0x06d40, 0x1ab54, 0x02b60, 0x09570, 0x052f2, 0x04970,
                    0x06566, 0x0d4a0, 0x0ea50, 0x06e95, 0x05ad0, 0x02b60, 0x186e3, 0x092e0, 0x1c8d7, 0x0c950,
                    0x0d4a0, 0x1d8a6, 0x0b550, 0x056a0, 0x1a5b4, 0x025d0, 0x092d0, 0x0d2b2, 0x0a950, 0x0b557,
                    0x06ca0, 0x0b550, 0x15355, 0x04da0, 0x0a5b0, 0x14573, 0x052b0, 0x0a9a8, 0x0e950, 0x06aa0,
                    0x0aea6, 0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260, 0x0f263, 0x0d950, 0x05b57, 0x056a0,
                    0x096d0, 0x04dd5, 0x04ad0, 0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b6a0, 0x195a6,
                    0x095b0, 0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40, 0x0af46, 0x0ab60, 0x09570,
                    0x04af5, 0x04970, 0x064b0, 0x074a3, 0x0ea50, 0x06b58, 0x055c0, 0x0ab60, 0x096d5, 0x092e0,
                    0x0c960, 0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0, 0x092d0, 0x0cab5,
                    0x0a950, 0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9, 0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930,
                    0x07954, 0x06aa0, 0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65, 0x0d530,
                    0x05aa0, 0x076a3, 0x096d0, 0x04afb, 0x04ad0, 0x0a4d0, 0x1d0b6, 0x0d250, 0x0d520, 0x0dd45,
                    0x0b5a0, 0x056d0, 0x055b2, 0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0
                ];
                
                this.Animals = ['鼠', '牛', '虎', '兔', '龙', '蛇', '马', '羊', '猴', '鸡', '狗', '猪'];
                this.lunarMonths = ['正', '二', '三', '四', '五', '六', '七', '八', '九', '十', '冬', '腊'];
                this.lunarDays = ['初一', '初二', '初三', '初四', '初五', '初六', '初七', '初八', '初九', '初十',
                                  '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '二十',
                                  '廿一', '廿二', '廿三', '廿四', '廿五', '廿六', '廿七', '廿八', '廿九', '三十'];
            }

            // Simplified lunar date calculation
            getLunarDate(date) {
                const baseDate = new Date(1900, 0, 31);
                const offset = Math.floor((date - baseDate) / 86400000);
                
                let lunarYear = 1900;
                let lunarMonth = 1;
                let lunarDay = 1;
                
                // This is a simplified calculation
                // In a real implementation, you would need more complex algorithms
                let daysInYear = 365;
                let tempOffset = offset;
                
                while (tempOffset > daysInYear) {
                    tempOffset -= daysInYear;
                    lunarYear++;
                    daysInYear = this.isLeapYear(lunarYear) ? 366 : 365;
                }
                
                // Approximate lunar month and day
                lunarMonth = Math.floor(tempOffset / 29.5) + 1;
                if (lunarMonth > 12) lunarMonth = 12;
                
                lunarDay = (tempOffset % 29.5) + 1;
                if (lunarDay > 30) lunarDay = 30;
                
                const zodiacYear = (lunarYear - 4) % 12;
                
                return {
                    year: lunarYear,
                    month: this.lunarMonths[lunarMonth - 1],
                    day: this.lunarDays[Math.floor(lunarDay) - 1],
                    zodiac: this.Animals[zodiacYear]
                };
            }
            
            isLeapYear(year) {
                return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
            }
        }

        // Update all information
        function updateDateTime() {
            const now = new Date();
            const lunarCalendar = new ChineseLunarCalendar();
            
            // Week number
            document.getElementById('weekNumber').textContent = `Week ${getWeekNumber(now)}`;
            
            // Current date
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            document.getElementById('currentDate').textContent = now.toLocaleDateString('en-US', options);
            
            // Lunar date
            const lunar = lunarCalendar.getLunarDate(now);
            document.getElementById('lunarDate').textContent = 
                `${lunar.year}年 ${lunar.month}月${lunar.day} (${lunar.zodiac}年)`;
            
            // Current time
            const timeOptions = { hour: '2-digit', minute: '2-digit', second: '2-digit' };
            document.getElementById('currentTime').textContent = now.toLocaleTimeString('en-US', timeOptions);
        }

        // Initial update
        updateDateTime();

        // Update every second
        setInterval(updateDateTime, 1000);
    </script>
</body>
</html>
